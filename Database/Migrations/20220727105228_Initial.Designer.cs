// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(SlapBotDal))]
    [Migration("20220727105228_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("Database.Entities.Game", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Punishment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Database.Entities.Invitation", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Gameid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("ChatId");

                    b.HasIndex("Gameid");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("Database.Entities.Slap", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("FromChatId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Gameid")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.Property<long>("ToChatId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("FromChatId");

                    b.HasIndex("Gameid");

                    b.HasIndex("ToChatId");

                    b.ToTable("Slap");
                });

            modelBuilder.Entity("MessengersClients.Types.Chat", b =>
                {
                    b.Property<long>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Gameid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("ChatId");

                    b.HasIndex("Gameid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Database.Entities.Invitation", b =>
                {
                    b.HasOne("MessengersClients.Types.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Entities.Game", "Game")
                        .WithMany()
                        .HasForeignKey("Gameid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Database.Entities.Slap", b =>
                {
                    b.HasOne("MessengersClients.Types.Chat", "From")
                        .WithMany()
                        .HasForeignKey("FromChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Entities.Game", "Game")
                        .WithMany("Slaps")
                        .HasForeignKey("Gameid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MessengersClients.Types.Chat", "To")
                        .WithMany()
                        .HasForeignKey("ToChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("From");

                    b.Navigation("Game");

                    b.Navigation("To");
                });

            modelBuilder.Entity("MessengersClients.Types.Chat", b =>
                {
                    b.HasOne("Database.Entities.Game", null)
                        .WithMany("Users")
                        .HasForeignKey("Gameid");
                });

            modelBuilder.Entity("Database.Entities.Game", b =>
                {
                    b.Navigation("Slaps");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
